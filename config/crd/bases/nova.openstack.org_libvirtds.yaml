
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.3.0
  creationTimestamp: null
  name: libvirtds.nova.openstack.org
spec:
  group: nova.openstack.org
  names:
    kind: Libvirtd
    listKind: LibvirtdList
    plural: libvirtds
    singular: libvirtd
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: Libvirtd is the Schema for the libvirtds API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: LibvirtdSpec defines the desired state of Libvirtd
          properties:
            novaLibvirtImage:
              description: Image is the Docker image to run for the daemon
              type: string
            roleName:
              description: Name of the worker role created for OSP computes
              type: string
            serviceAccount:
              description: service account used to create pods
              type: string
          required:
          - novaLibvirtImage
          - roleName
          - serviceAccount
          type: object
        status:
          description: LibvirtdStatus defines the observed state of Libvirtd
          properties:
            count:
              description: Count is the number of nodes the daemon is deployed to
              format: int32
              type: integer
            daemonsetHash:
              description: Daemonset hash used to detect changes
              type: string
          required:
          - count
          - daemonsetHash
          type: object
      type: object
  version: v1beta1
  versions:
  - name: v1beta1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
